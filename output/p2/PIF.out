{ - Pair { first: -1, second: -1 } -> SEPARATOR
meth - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 14, second: 0 } -> IDENTIFIER
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
, - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
) - Pair { first: -1, second: -1 } -> SEPARATOR
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
{ - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
if - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
< - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
) - Pair { first: -1, second: -1 } -> SEPARATOR
=> - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
else - Pair { first: -1, second: -1 } -> RESERVED_WORD
=> - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
; - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
meth - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 9, second: 0 } -> IDENTIFIER
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
, - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
) - Pair { first: -1, second: -1 } -> SEPARATOR
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
{ - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
; - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
= - Pair { first: -1, second: -1 } -> OPERATOR
& - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 14, second: 0 } -> IDENTIFIER
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
, - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
) - Pair { first: -1, second: -1 } -> SEPARATOR
; - Pair { first: -1, second: -1 } -> SEPARATOR
while - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
> - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 2, second: 0 } -> CONSTANT
) - Pair { first: -1, second: -1 } -> SEPARATOR
{ - Pair { first: -1, second: -1 } -> SEPARATOR
if - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
% - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
== - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 2, second: 0 } -> CONSTANT
and - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
% - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
== - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 2, second: 0 } -> CONSTANT
) - Pair { first: -1, second: -1 } -> SEPARATOR
break - Pair { first: -1, second: -1 } -> RESERVED_WORD
; - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
= - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
- - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 3, second: 0 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
=> - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 1 } -> IDENTIFIER
; - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
print - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
& - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 9, second: 0 } -> IDENTIFIER
( - Pair { first: -1, second: -1 } -> SEPARATOR
CONSTANT - Pair { first: 16, second: 0 } -> CONSTANT
, - Pair { first: -1, second: -1 } -> SEPARATOR
CONSTANT - Pair { first: 8, second: 0 } -> CONSTANT
) - Pair { first: -1, second: -1 } -> SEPARATOR
) - Pair { first: -1, second: -1 } -> SEPARATOR
; - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR

meth - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 16, second: 0 } -> IDENTIFIER
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 22, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
, - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
) - Pair { first: -1, second: -1 } -> SEPARATOR
: - Pair { first: -1, second: -1 } -> SEPARATOR
bool - Pair { first: -1, second: -1 } -> RESERVED_WORD
{ - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 0, second: 0 } -> IDENTIFIER
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
= - Pair { first: -1, second: -1 } -> OPERATOR
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 21, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
= - Pair { first: -1, second: -1 } -> OPERATOR
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 1, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
= - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 8, second: 1 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 2, second: 0 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
int - Pair { first: -1, second: -1 } -> RESERVED_WORD
= - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 12, second: 0 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
var - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 8, second: 2 } -> IDENTIFIER
: - Pair { first: -1, second: -1 } -> SEPARATOR
string - Pair { first: -1, second: -1 } -> RESERVED_WORD
= - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 5, second: 1 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
for - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
= - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 4, second: 0 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
<= - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 5, second: 2 } -> IDENTIFIER
and - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
<= - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
; - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
= - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
+ - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 3, second: 0 } -> CONSTANT
) - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
{ - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
if - Pair { first: -1, second: -1 } -> RESERVED_WORD
( - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 2 } -> IDENTIFIER
% - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
== - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 2, second: 1 } -> CONSTANT
and - Pair { first: -1, second: -1 } -> RESERVED_WORD
IDENTIFIER - Pair { first: 6, second: 0 } -> IDENTIFIER
% - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
== - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 2, second: 1 } -> CONSTANT
) - Pair { first: -1, second: -1 } -> SEPARATOR
{ - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
= - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 8, second: 0 } -> IDENTIFIER
; - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
	 - Pair { first: -1, second: -1 } -> SEPARATOR
=> - Pair { first: -1, second: -1 } -> OPERATOR
IDENTIFIER - Pair { first: 5, second: 0 } -> IDENTIFIER
> - Pair { first: -1, second: -1 } -> OPERATOR
CONSTANT - Pair { first: 3, second: 0 } -> CONSTANT
; - Pair { first: -1, second: -1 } -> SEPARATOR
} - Pair { first: -1, second: -1 } -> SEPARATOR
